input {
  beats {
    port => 5000
    codec => multiline {
      patterns_dir => "/opt/logstash/patterns"
      pattern => "^(%{FUSIONTIMESTAMP} %{LOGLEVEL})"
      negate => true
      what=> "previous"
    }
  }
  beats {
    port => 5001
    codec => multiline {
      patterns_dir => "/opt/logstash/patterns"
      pattern => "^(%{TOMCATTIMESTAMP} %{DATA})"
      negate => true
      what=> "previous"
    }
  }
  beats {
    port => 5002
    codec => multiline {
      pattern => '^\[\d{4}'
      negate => true
      what => "previous"
    }
  }
}

filter {
  if [type] == "fusion_log" {
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => [ "message", "%{FUSIONLOG}" ]
    }
    date {
      match => ["timestamp", "yyyy/MM/dd HH:mm:ss.SSS"]
      locale => "zh_TW"
      timezone => "Asia/Taipei"
      remove_field => ["timestamp"]
    }
  }
  if [type] == "tomcat_log" {
    mutate {
      add_field => ["catalog", "%{[fields][catalog]}"]
      add_field => ["system", "%{[fields][system]}"]
      remove_field => ["[fields][catalog]", "[fields][system]"]
    }
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => [ "message", "%{TOMCATLOG}" ]
    }
    ruby {
      code => "event.set('timestamp', DateTime.strptime(event.get('timestamp'),'%d-%b-%Y %T.%L').strftime('%F %T.%L'))"
    }
    date {
      match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
      locale => "zh_TW"
      timezone => "Asia/Taipei"
      remove_field => ["timestamp"]
    }
  }
  if [type] == "payara_log" {
    mutate {
      add_field => ["catalog", "%{[fields][catalog]}"]
      add_field => ["system", "%{[fields][system]}"]
      remove_field => ["[fields][catalog]", "[fields][system]"]
    }
    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => [ "message", "%{PAYARALOG}" ]
    }
    date {
      match => ["timestamp", "ISO8601"]
      locale => "zh_TW"
      timezone => "Asia/Taipei"
      remove_field => ["timestamp"]
    }
  }
  if "_grokparsefailure" in [tags] {
          drop { }
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
  }
  stdout { codec => rubydebug }
}
